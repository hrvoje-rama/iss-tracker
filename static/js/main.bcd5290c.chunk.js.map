{"version":3,"sources":["containers/Map.js","containers/App.js","index.js"],"names":["ISS_URL","Map","process","REACT_APP_MAP_KEY","state","center","lat","lng","zoom","getCoordinates","fetch","then","res","json","data","setState","iss_position","latitude","longitude","this","interval","setInterval","clearInterval","console","log","React","Component","App","className","id","src","ReactDOM","render","document","getElementById"],"mappings":"oNAGMA,EAAU,0CAgDDC,GA/CCC,+HAAYC,kB,4MAOxBC,MAAQ,CACJC,OAAQ,CACJC,IAAK,EACLC,IAAK,GAETC,KAAM,G,EAYVC,eAAiB,WACbC,MAAMV,GACDW,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CACxBV,OAAQ,CACJC,IAAKQ,EAAKE,aAAaC,SACvBV,IAAKO,EAAKE,aAAaE,iB,kEAdnCC,KAAKV,iBACLU,KAAKC,SAAWC,YAAYF,KAAKV,eAAgB,O,6CAIjDa,cAAcH,KAAKC,Y,+BAiBnB,OAFAG,QAAQC,IAAI,OAAQL,KAAKf,MAAMC,OAAOC,KACtCiB,QAAQC,IAAI,OAAQL,KAAKf,MAAMC,OAAOE,KAElC,6BACI,wCAAcY,KAAKf,MAAMC,OAAOC,KAChC,yCAAea,KAAKf,MAAMC,OAAOE,U,GAnC/BkB,IAAMC,Y,MCSTC,MAff,WACE,OACE,yBAAKC,UAAU,MAChB,wBAAIA,UAAU,MAAd,gDAEA,yBAAKA,UAAU,KAAKC,GAAG,OACvB,kBAAC,EAAD,MACA,yBAAKA,GAAG,aACN,yBAAKC,IAAI,qD,MCCdC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.bcd5290c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst ISS_URL = \"https://api.wheretheiss.at/v1/satellites/25544\"\r\nconst MAP_KEY = process.env.REACT_APP_MAP_KEY\r\nconst img = <img src = \"./iss.svg\" alt = \"iss\" height = \"30px\"/>\r\n\r\nconst SpaceStation = ({ img }) => <div>{img}</div>\r\n\r\n\r\nclass Map extends React.Component{\r\n    state = {\r\n        center: {\r\n            lat: 0,\r\n            lng: 0\r\n        },\r\n        zoom: 1\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getCoordinates()\r\n        this.interval = setInterval(this.getCoordinates, 3000)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.interval)\r\n    }\r\n\r\n    getCoordinates = () => {\r\n        fetch(ISS_URL)\r\n            .then(res => res.json())\r\n            .then(data => this.setState({\r\n                center: {\r\n                    lat: data.latitude,\r\n                    lng: data.longitude\r\n                }\r\n            }))\r\n    }\r\n\r\n    render(){\r\n        console.log(\"LAT:\", this.state.center.lat)\r\n        console.log(\"LNG:\", this.state.center.lng)\r\n        return(\r\n            <div>\r\n                <p>Latitude: {this.state.center.lat}</p>\r\n                <p>Longitude: {this.state.center.lng}</p>\r\n                            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Map","import React, { Component } from 'react';\r\nimport Map from \"./Map\";\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='tc'>\r\n\t\t <h1 className='f1'>International Space Station Current Location</h1>\r\n\t\t \r\n\t\t <div className='f1' id=\"MAP\">\r\n\t\t <Map />\r\n\t\t <div id=\"container\">\r\n    \t<img src=\"https://hrvojeramljak.from.hr/Asset%2040.svg\"/>\r\n\t\t</div>\r\n\t\t </div>\r\n\t\t</div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\n\n/*ReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);*/\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}
